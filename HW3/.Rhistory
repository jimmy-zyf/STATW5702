X <- chisq.test(localmat, correct = FALSE)
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(GGally)
library(palmerpenguins)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
library(dplyr)
library(fivethirtyeight)
library(parcoords)
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(GGally)
library(palmerpenguins)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
library(dplyr)
library(fivethirtyeight)
library(parcoords)
library('AER')
library(forcats)
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
DoctorVisits
vcd::mosaic(numvisits ~ gender + private + freepoor + freerepat + nchronic + lchronic,
direction = c("v", "v", "v", "v", "v", "v","h"), count)
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
paris(xtab(n~., factor_summary))
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
pairs(xtab(n~., factor_summary))
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
pairs(xtabs(n~., factor_summary))
localmat <- as.matrix(count[,2: 3])
rownames(localmat) <- count$numvisits
X <- chisq.test(localmat, correct = FALSE)
localmat <- as.matrix(count[,2: 3])
rownames(localmat) <- count$numvisits
X <- chisq.test(localmat, correct = FALSE)
count <- DoctorVisits %>%
group_by(gender, private, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>%
summarise(Freq = n())
count <- DoctorVisits %>%
group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>%
summarise(Freq = n())
count
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
pairs(xtabs(n~., factor_summary))
localmat <- as.matrix(count[,1: 2])
rownames(localmat) <- count$numvisits
X <- chisq.test(localmat, correct = FALSE)
localmat <- as.matrix(count[,1: 2])
rownames(localmat) <- count$numvisits
X <- chisq.test(localmat, correct = FALSE)
localmat <- as.matrix(count[,1: 2])
rownames(localmat) <- count$numvisits
X <- chisq.test(localmat, correct = FALSE)
localmat <- as.matrix(count[,1])
rownames(localmat) <- count$numvisits
X <- chisq.test(localmat, correct = FALSE)
#localmat <- as.matrix(count[,1])
#rownames(localmat) <- count$numvisits
X <- chisq.test(DoctorVisits$numvisits, DoctorVisits$age, correct = FALSE)
X
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
pairs(xtabs(n~., factor_summary))
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(GGally)
library(palmerpenguins)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
library(dplyr)
library(fivethirtyeight)
library(parcoords)
pulitzer %>% arrange(newspaper) %>%
parcoords(
rownames = F,
brushMode = "1D-axes",
reorderable = T,
queue = T)
library('AER')
library(forcats)
DoctorVisits$visits <- as.factor(DoctorVisits$visits)
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
DoctorVisits
count <- DoctorVisits %>%
group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>%
summarise(Freq = n())
count
factor_summary <- DoctorVisits %>% select(visits, gender, age, income, illness)
pairs(xtabs(visits ~., factor_summary))
factor_summary <- DoctorVisits %>% select(visits, gender, age, income, illness)
str(factor_summary)
pairs(xtabs(visits ~., factor_summary))
factor_summary <- DoctorVisits %>% select(visits, gender, age, income, illness)
str(factor_summary)
pairs(xtabs(visits ~ ., factor_summary))
factor_summary <- DoctorVisits %>% select(visits, gender, age, income, illness) %>%
mutate(
visits= as.integer(visits/2),
age = as.integer(floor(age*100/20)),
income = as.integer(income * 3)
)
str(factor_summary)
pairs(xtabs(visits ~ ., factor_summary))
factor_summary <- DoctorVisits %>%
select(visits, gender, age, income, illness) %>%
mutate(
visits= as.integer(visits/2),
age = as.integer(floor(age*100/20)),
income = as.integer(income * 3)
)
str(factor_summary)
pairs(xtabs(visits ~ ., factor_summary))
factor_summary <- DoctorVisits %>%
select(visits, gender, age, income, illness) %>%
mutate(
visits= as.integer(visits/2),
age = as.integer(floor(age*100/20)),
income = as.integer(income * 3)
) %>% tally()
str(factor_summary)
pairs(xtabs(visits ~ ., factor_summary))
factor_summary <- DoctorVisits %>%
select(visits, gender, age, income, illness) %>%
mutate(
visits= as.integer(visits/2),
age = as.integer(floor(age*100/20)),
income = as.integer(income * 3)
) %>% tally()
str(factor_summary)
pairs(xtabs(n ~ ., factor_summary))
factor_summary <- DoctorVisits %>%
select(visits, gender, age, income, illness) %>%
mutate(
visits= as.integer(visits/2),
age = as.integer(floor(age*100/20)),
income = as.integer(income * 3)
) %>% tally()
str(factor_summary)
pairs(xtabs(n ~ ., factor_summary))
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
pairs(xtabs(n ~ ., factor_summary))
data
X <- chisq.test(DoctorVisits$numvisits, DoctorVisits$income, correct = FALSE)
X
X <- chisq.test(DoctorVisits$numvisits, DoctorVisits$age, correct = FALSE)
X
X <- chisq.test(DoctorVisits$numvisits, DoctorVisits$income, correct = FALSE)
X
vcd::mosaic(numvisits ~ gender + lchronic + private,
direction = c("v", "v", "v", "h"), highlighting_fill = c("grey90", "cornflowerblue"), count)
vcd::mosaic(numvisits ~ gender + lchronic,
direction = c("v", "v", "h"), chighlighting_fill = c("red", "cornflowerblue"), ount)
vcd::mosaic(numvisits ~ gender + lchronic,
direction = c("v", "v", "h"), highlighting_fill = c("red", "cornflowerblue"), count)
vcd::mosaic(numvisits ~ gender,
direction = c("v", "h"), highlighting_fill = c("grey90", "cornflowerblue"), count)
pulitzer %>% arrange(newspaper) %>%
parcoords(
rownames = F,
brushMode = "1D-axes",
reorderable = T,
queue = T)
data <- read.csv('https://github.com/nychealth/coronavirus-data/blob/master/by-age.csv')
data
data <- read.csv('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/by-age.csv')
data
install.packages('HH')
HH::likert(AGE_GROUP~., data, positive.order = TRUE,
main = 'NYC Covid-19 test result by age',
xlab = 'percent', ylab = 'age group')
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(GGally)
library(palmerpenguins)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
data <-
penguins_raw
ggparcoord(Filter(is.numeric, penguins_raw), columns = 1 : 7, alphaLines =.3, scale ="uniminmax", groupColumn = 'Species') + geom_vline(xintercept =1:7, color ="lightblue")
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax", groupColumn = 'Species') + geom_vline(xintercept =1:7, color ="lightblue")
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
#groupColumn = 'Species'
ggparcoord(data, columns = 1 : 7, alphaLines =.3, groupColumn = 'Species', scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
ggparcoord(data, columns = 1 : 7, alphaLines =.3, groupColumn = 'Culmen Depth (mm)', scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
ggparcoord(data, columns = 1 : 7, alphaLines =.3, colorBy = "Species", scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
data$Species <- factor(penguins_raw$Species, levels = penguins_raw$Species)
data$Species <- factor(data$Species, levels = penguins_raw$Species)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, groupColumn = 7, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
ggparcoord(data, columns = 1 : 7, alphaLines =.3, groupColumn = 8, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
data
data.class()
data.column
data.columns
data
penguins_raw
names(subset)<-c("Sample Number","Culmen Length (mm)","Culmen Depth (mm)","Flipper Length (mm)","Body Mass (g)","Delta 15 N (o/oo)","Delta 13 C (o/oo)")
ggparcoord(penguins_raw, columns=c(10,11,7:10),
groupColumn = "diamond_cut", alphaLines = 0.8, order=c(2, 10:13, 15:16),
title = "Parallel Coordinate Plot showing trends for Fair cut diamonds", scale = "uniminmax") +
scale_color_manual(values=c("maroon","gray"))
ggparcoord(data, columns=c(10,11,7:10), alphaLines =.3, scale ="uniminmax") +
geom_vline(xintercept =1:7, color ="lightblue")
ggparcoord(penguins_raw, columns = c(10,11,7:10), alphaLines =.3, scale ="uniminmax") +
geom_vline(xintercept =1:7, color ="lightblue")
ggparcoord(penguins_raw, columns = c(10,11,7:10), alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 4, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
#groupby Island
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
X1 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$age, correct = FALSE)
X2 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$income, correct = FALSE)
X3 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$illness, correct = FALSE)
X4 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$reduced, correct = FALSE)
X5 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$health, correct = FALSE)
X1
X2
X3
X4
X5
X1 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$age)
X2 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$income)
X3 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$illness)
X4 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$reduced)
X5 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$health)
X1
X2
X3
X4
X5
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(GGally)
library(palmerpenguins)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
#groupby Island
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
library(dplyr)
library(fivethirtyeight)
library(parcoords)
pulitzer %>% arrange(newspaper) %>%
parcoords(
rownames = F,
brushMode = "1D-axes",
reorderable = T,
queue = T)
library('AER')
library(forcats)
DoctorVisits$visits <- as.factor(DoctorVisits$visits)
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
DoctorVisits
count <- DoctorVisits %>%
group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>%
summarise(Freq = n())
count
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
pairs(xtabs(n ~ ., factor_summary))
X1 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$age)
X2 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$income)
X3 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$illness)
X4 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$reduced)
X5 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$health)
X1
X2
X3
X4
X5
vcd::mosaic(numvisits ~ gender,
direction = c("v", "h"), highlighting_fill = c("grey90", "cornflowerblue"), count)
vcd::mosaic(numvisits ~ gender + lchronic,
direction = c("v", "v", "h"), highlighting_fill = c("red", "cornflowerblue"), count)
vcd::mosaic(numvisits ~ gender + lchronic + private,
direction = c("v", "v", "v", "h"), highlighting_fill = c("grey90", "cornflowerblue"), count)
library(ggalluvial)
ggplot(as.data.frame(count), aes(y = Freq, axis1 = lchronic, axis2 = private)) +
geom_alluvium(aes(fill = lchronic), width = 1/12)
data <- read.csv('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/by-age.csv')
data
HH::likert(AGE_GROUP~., data, positive.order = TRUE,
main = 'NYC Covid-19 test result by age',
xlab = 'percent', ylab = 'age group')
data("DoctorVisits")
DoctorVisits$visits <- as.factor(DoctorVisits$visits)
library('AER')
library(forcats)
data("DoctorVisits")
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(GGally)
library(palmerpenguins)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
#groupby Island
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
library(dplyr)
library(fivethirtyeight)
library(parcoords)
pulitzer %>% arrange(newspaper) %>%
parcoords(
rownames = F,
brushMode = "1D-axes",
reorderable = T,
queue = T)
library('AER')
library(forcats)
data("DoctorVisits")
DoctorVisits$visits <- as.factor(DoctorVisits$visits)
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
count <- DoctorVisits %>%
group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>%
summarise(Freq = n())
count
count <- DoctorVisits %>%
group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>%
summarise(Freq = n())
count.head(5)
count <- DoctorVisits %>%
group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>%
summarise(Freq = n())
head(count)
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
head(DoctorVisits)
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
pairs(xtabs(n ~ ., factor_summary))
X1 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$age)
X2 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$income)
X3 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$illness)
X4 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$reduced)
X5 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$health)
X1
X2
X3
X4
X5
vcd::mosaic(numvisits ~ gender,
direction = c("v", "h"), highlighting_fill = c("grey90", "cornflowerblue"), count)
vcd::mosaic(numvisits ~ gender + lchronic,
direction = c("v", "v", "h"), highlighting_fill = c("red", "cornflowerblue"), count)
vcd::mosaic(numvisits ~ gender + lchronic + private,
direction = c("v", "v", "v", "h"), highlighting_fill = c("grey90", "cornflowerblue"), count)
library(ggalluvial)
ggplot(as.data.frame(count), aes(y = Freq, axis1 = lchronic, axis2 = private)) +
geom_alluvium(aes(fill = lchronic), width = 1/12)
data <- read.csv('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/by-age.csv')
data
head(data)
HH::likert(AGE_GROUP~., data, positive.order = TRUE,
main = 'NYC Covid-19 test result by age',
xlab = 'percent', ylab = 'age group')
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(GGally)
library(palmerpenguins)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
penguins_raw
#groupby Island
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 8, alphaLines =.3, scale ="uniminmax")
#groupby Island
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 8, alphaLines =.3, scale ="uniminmax")
#groupby Island
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 8, alphaLines =.3, scale ="uniminmax")
#groupby Island
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax")
#groupby Island
p1 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax")
p2 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
p3 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 8, alphaLines =.3, scale ="uniminmax")
install.packages('gridExtra')
install.packages("gridExtra")
library(gridExtra)
#groupby Island
p1 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax")
p2 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
p3 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 8, alphaLines =.3, scale ="uniminmax")
```{r}
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 8, alphaLines =.3, scale ="uniminmax")
ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 14, alphaLines =.3, scale ="uniminmax")
library(gridExtra)
p1 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax", title = 'group by species')
p2 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax", title = 'group by island')
p3 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 14, alphaLines =.3, scale ="uniminmax", title = 'group by sex')
grid.arrange(p1, p2, p3, nrow = 1)
library(gridExtra)
p1 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax", title = 'group by species')
p2 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax", title = 'group by island')
p3 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 14, alphaLines =.3, scale ="uniminmax", title = 'group by sex')
grid.arrange(p1, p2, p3, nrow = 3)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue", title = '')
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue", title = 'XXX')
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
factor_summary <- DoctorVisits %>% select(numvisits,gender,private,freepoor,freerepat,nchronic,lchronic) %>% mutate(
numvisits = as.numeric(numvisits), )
library('AER')
library(forcats)
data("DoctorVisits")
DoctorVisits$visits <- as.factor(DoctorVisits$visits)
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
library('AER')
library(forcats)
data("DoctorVisits")
DoctorVisits$visits <- as.factor(DoctorVisits$visits)
# keep this chunk in your .Rmd file
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(GGally)
library(palmerpenguins)
data <- Filter(is.numeric, penguins_raw)
ggparcoord(data, columns = 1 : 7, alphaLines =.3, scale ="uniminmax") + geom_vline(xintercept =1:7, color ="lightblue")
penguins_raw
library(gridExtra)
p1 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 3, alphaLines =.3, scale ="uniminmax", title = 'group by species')
p2 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 5, alphaLines =.3, scale ="uniminmax", title = 'group by island')
p3 <- ggparcoord(penguins_raw, columns = c(2, 10:13, 15:16), groupColumn = 14, alphaLines =.3, scale ="uniminmax", title = 'group by sex')
grid.arrange(p1, p2, p3, nrow = 3)
library(dplyr)
library(fivethirtyeight)
library(parcoords)
pulitzer %>% arrange(newspaper) %>%
parcoords(
rownames = F,
brushMode = "1D-axes",
reorderable = T,
queue = T)
library('AER')
library(forcats)
data("DoctorVisits")
DoctorVisits$visits <- as.factor(DoctorVisits$visits)
DoctorVisits <- DoctorVisits %>%
mutate(numvisits = fct_collapse(visits,
'0' = c("0"),
'1' = c("1"),
'2+' = c("2", "3", "4", "5", "6", "7", "8", "9")
))
head(DoctorVisits)
count <- DoctorVisits %>%
group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>%
summarise(Freq = n())
head(count)
factor_summary <- DoctorVisits %>% group_by(gender, private, freepoor, freerepat, nchronic, lchronic, numvisits) %>% tally()
pairs(xtabs(n ~ ., factor_summary))
factor_summary <- DoctorVisits %>% select(numvisits,gender,private,freepoor,freerepat,nchronic,lchronic) %>% mutate(
numvisits = as.numeric(numvisits), )
pairs(xtabs(numvisits ~ .,factor_summary))
X1 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$gender)
X2 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$private)
X3 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$freepoor)
X4 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$freerepat)
X5 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$nchronic)
X6 <- chisq.test(DoctorVisits$numvisits, DoctorVisits$lchronic)
X1
X2
X3
X4
X5
X6
